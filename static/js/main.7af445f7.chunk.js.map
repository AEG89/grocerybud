{"version":3,"sources":["List.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setNAme","localStorage","getItem","JSON","parse","setList","isEditing","setIsEditing","editId","setEditId","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","filter","specificItem","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7af445f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport {FaEdit,FaTrash} from 'react-icons/fa';\r\n\r\n\r\nfunction List({items,removeItem,editItem}) {\r\n  return <div className=\"grocery-list\">\r\n    {items.map((item) => {\r\n      const {id,title} = item;\r\n      \r\n      return <article key={id} className=\"grocery-item\">\r\n        <p className='title'>{title}</p>\r\n        <div className=\"btn-container\">\r\n          <button type='button' className='edit-btn'\r\n          onClick={() => editItem(id)}>\r\n            < FaEdit />\r\n          </button>\r\n          <button type='button' className='delete-btn' \r\n          onClick={() => removeItem(id)}>\r\n            < FaTrash />\r\n          </button>\r\n        </div>\r\n      </article>\r\n    })}\r\n  </div>\r\n  \r\n}\r\n\r\nexport default List;","import React, {useEffect} from 'react';\r\n\r\nconst Alert = ({type,msg,removeAlert,list}) => {\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() =>{\r\n      removeAlert()\r\n    },3000)\r\n    return () => clearTimeout(timeout)\r\n  }, [list])\r\n  return <p className={'alert alert-'+(type)}>{msg}</p>\r\n  \r\n}\r\n\r\nexport default Alert;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport List from './List';\nimport Alert from './Alert';\n\nconst getLocalStorage = () => {\n  let list= localStorage.getItem('list');\n  if(list){\n    return JSON.parse(localStorage.getItem('list'))\n  }\n  else{\n    return []\n  }\n}\n\nfunction App() {\nconst [name,setNAme] = useState('');\nconst [list, setList] = useState(getLocalStorage());\nconst [isEditing, setIsEditing] = useState(false);\nconst [editId, setEditId] = useState(null);\nconst [alert, setAlert] = useState({ \n  show: false,\n  msg: '',\n  type:'',\n})\nconst handleSubmitt = (e) => {\n  e.preventDefault();\n  \n  if(!name){\n    showAlert(true,'danger', 'Please enter value')\n  }\n  else if(name && isEditing){\n    setList(\n      list.map((item) => {\n        if(item.id === editId) {\n          return {...item, title:name}\n        }\n        return item\n      })\n    )\n    setNAme('');\n    setEditId(null);\n    setIsEditing(false);\n  }\n  else{\n    showAlert(true,'success','Item added to the list')\n    const newItem = {id : new Date().getTime().toString(),\n    title:name};\n    setList([...list,newItem]);\n    setNAme('');\n    showAlert(true,'success','You have edited');\n  }\n}\n\nconst showAlert = (show=false, type=\"\", msg=\"\") => {\n  setAlert({show,type,msg})\n}\n\nconst clearList = () => {\n  showAlert(true,'danger','You are deleting all');\n  setList([]);\n}\n \nconst removeItem = (id) => {\n  showAlert(true,'danger','you are removing item');\n  setList(list.filter((item) => item.id !== id))\n}\n\nconst editItem = (id) => {\n  \n  const specificItem = list.find((item) => item.id === id);\n  setIsEditing(true);\n  setEditId(id);\n  setNAme(specificItem.title)\n  \n}\n\nuseEffect(() => {\n  localStorage.setItem('list',JSON.stringify(list))\n}, [list]) \n\n\n  return <section className=\"section-center\">\n    <form className=\"grocery-form\" onSubmit={handleSubmitt}>\n      {alert.show && <Alert {...alert} removeAlert={showAlert}\n      list={list} />}\n      <h3>Grocery Bud</h3>\n      <div className=\"form-control\">\n        <input type=\"text\" className='grocery' placeholder='eg. eggs' \n        value={name} onChange={(e) => setNAme(e.target.value)} />\n        <button type=\"submit\" className=\"submit-btn\">\n          {isEditing ? 'edit': 'submit'}\n        </button>\n      </div>\n    </form>\n    {list.length > 0 && (\n    <div className=\"grocery-container\">\n      <List items={list} removeItem={removeItem} editItem={editItem} />\n      <button className=\"clear-btn\" onClick={clearList}>Clear Items</button>\n    </div>\n    )}\n    \n  </section>\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}